#F test for pop density
drop1(fitm, test = "F")
#### Eta squared, partial eta squared
etaSquared(fitm, anova=TRUE)
fit <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
summay(fit)
fit <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
summay(fit)
summary(fit)
drop1(fit1, test = "F")
drop1(fit, test = "F")
etaSquared(fit)
drop1(fit, test = "F")
summary(fit)
boxplot(mtable$unemployment_2020)
boxplot(mtable$unemployment_2020)
skewness(mtable$unemployment_2020)
library("moments")
skewness(mtable$unemployment_2020)
skewness(mtable$perc_income)
skewness(mtable$poverty_all)
skewness(mtable$hi_edu)
skewness(mtable$nfullyvacc)
skewness(mtable$unemployment_2020)
skewness(mtable$perc_income)
skewness(mtable$poverty_all)
skewness(mtable$hi_edu)
skewness(mtable$nfullyvacc)
# load libraries
library(tidyverse)
library(ggplot2)
#Load master table
mtable <- read.csv("Master_Table.csv")
#normalize fully vacc by population
mtable$nfullyvacc <- mtable$fullyvacc/mtable$population
#multiply incidence and mortality by 100,000
mtable$diff_incidence <- mtable$diff_incidence*100000
mtable$diff_mortality <- mtable$diff_mortality*100000
#make binary variable for rural codes
mtable$Rural <-  ifelse(mtable$RUC_Code==1, 2,ifelse(mtable$RUC_Code==2, 2,
ifelse(mtable$RUC_Code==3, 1,
ifelse(mtable$RUC_Code==4, 1,
ifelse(mtable$RUC_Code==5, 1,
ifelse(mtable$RUC_Code==6, 1,
ifelse(mtable$RUC_Code==7, 1,0)))))))
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#Rural as categorical variable
mtable$Rural <- as.factor(mtable$Rural)
#model for vaccines
fitv <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
summary(fitv)
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#model for vaccines with confounders
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
#model for vaccines with confounders
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
mtable %>% ggplot() +
aes(x = nfullyvacc, y=diff_incidence) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fitv$coefficients[1], slope = fitv$coefficients[2],
color = "lightblue"), size = 1) +
geom_abline(aes(intercept = fitvc$coefficients[1], slope = fitvc$coefficients[2],
color = "blue"), size = 1) +
xlab  ("% Fully vaccinated population") +
ylab ( "Incidence of COVID-19 per 100,000" )+
scale_color_identity(guide = "legend", labels = c("Adjusted", "Non-adjusted")) +
theme_bw() + theme(text = element_text(size = 19),
legend.position = "right") + guides(color = guide_legend("Model"))
#F test for pop density
drop1(fitvc, test = "F")
#### Eta squared, partial eta squared
# install.packages(lsr)
library(lsr)
etaSquared(fitvc, anova=TRUE)
#model for vaccines with confounders relevel
mtable$Rural <- relevel(mtable$Rural, ref="1")
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
# load libraries
library(tidyverse)
library(ggplot2)
#Load master table
mtable <- read.csv("Master_Table.csv")
#normalize fully vacc by population
mtable$nfullyvacc <- mtable$fullyvacc/mtable$population
#multiply incidence and mortality by 100,000
mtable$diff_incidence <- mtable$diff_incidence*100000
mtable$diff_mortality <- mtable$diff_mortality*100000
#organize master table
mtable <- mtable %>% relocate(diff_deaths, FIPS, diff_test, .after = population)
mtable <- mtable[,-1]
## columns to be iterated
colnames(mtable)[-c(1:9)]
## Iteration for Incidence
models = list()
# LOOP
for (v in colnames(mtable)[-c(1:9)]) {
models[[v]] <- lm(mtable[,"diff_incidence"] ~ mtable[,v])
}
## get r-sq , p-val and beta
summary(models[[1]])
coef(models[[1]])[2] ## beta
summary(models[[1]])$adj.r.squared ## r.square
-log10(summary(models[[1]])$coefficients[2,4]) ## p-val
sapply(models, function(x) data.frame(
#name = names(x),
beta = unname(coef(x)[2]),
rsq = unname(summary(x)$adj.r.squared),
pval = unname(-log10(summary(x)$coefficients[2,4]))
)) %>% t %>% as.data.frame -> results_inc
## Iteration for mortality
models = list()
# LOOP
for (v in colnames(mtable)[-c(1:9)]) {
models[[v]] <- lm(mtable[,"diff_mortality"] ~ mtable[,v])
}
## get r-sq , p-val and beta
summary(models[[1]])
coef(models[[1]])[2] ## beta
summary(models[[1]])$adj.r.squared ## r.square
-log10(summary(models[[1]])$coefficients[2,4]) ## p-val
sapply(models, function(x) data.frame(
#name = names(x),
beta = unname(coef(x)[2]),
rsq = unname(summary(x)$adj.r.squared),
pval = unname(-log10(summary(x)$coefficients[2,4]))
)) %>% t %>% as.data.frame -> results_mort
do.call(rbind.data.frame, results_mort) -> results_mort
do.call(rbind.data.frame, results_inc) -> results_inc
write.csv(results_mort, "univariate_model_mortality.csv")
write.csv(results_inc, "univariate_model_incidence.csv")
#make binary variable for rural codes
mtable$Rural <-  ifelse(mtable$RUC_Code==1, 2,ifelse(mtable$RUC_Code==2, 2,
ifelse(mtable$RUC_Code==3, 1,
ifelse(mtable$RUC_Code==4, 1,
ifelse(mtable$RUC_Code==5, 1,
ifelse(mtable$RUC_Code==6, 1,
ifelse(mtable$RUC_Code==7, 1,0)))))))
sum(mtable$Rural==2)
sum(mtable$Rural==1)
sum(mtable$Rural==0)
#significant
-log10(0.05)
#Rural as categorical variable
mtable$Rural <- as.factor(mtable$Rural)
#Boxplot for incidence vs Pop density
mtable %>% ggplot() +
aes(x = Rural, y = diff_incidence, fill = Rural) +
geom_boxplot() +
ylab("Incidence per 100,000") + xlab("Population density") +
theme_bw() + theme(text = element_text(size = 30), legend.position = "none")
#statistical test for incidence vs population density
kruskal.test(mtable$diff_incidence ~ mtable$Rural)
#pairewise comparison
pairwise.wilcox.test(mtable$diff_incidence , mtable$Rural,
p.adjust.method = "BH")
#Boxplot for mortality vs Pop density
mtable %>% ggplot() +
aes(x = Rural, y = diff_mortality, fill = Rural) +
geom_boxplot() +
ylab("Incidence per 100,000") + xlab("Population density") +
theme_bw() + theme(text = element_text(size = 30), legend.position = "none")
#Boxplot for mortality vs Pop density
mtable %>% ggplot() +
aes(x = Rural, y = diff_mortality, fill = Rural) +
geom_boxplot() +
ylab("Mortality per 100,000") + xlab("Population density") +
theme_bw() + theme(text = element_text(size = 30), legend.position = "none")
plot(mtable$poverty_all , mtable$nfullyvacc)
plot(mtable$poverty_all , mtable$diff_ntest)
fit <- lm(mtable$diff_ntest ~ mtable$poverty_all)
summary(fit)
hist(mtable$poverty_all)
plot(mtable$poverty_all , mtable$diff_ntest)
fit <- lm(mtable$diff_ntest ~ mtable$poverty_all)
summary(fit)
abline(fit)
fit <- lm(mtable$diff_ntest ~ mtable$poverty_all + mtable$nfullyvacc)
summary(fit)
abline(fit)
fit <- lm(mtable$diff_ntest ~ mtable$poverty_all)
summary(fit)
plot(mtable$poverty_all , mtable$diff_ntest)
abline(fit)
# load libraries
library(tidyverse)
library(ggplot2)
#Load master table
mtable <- read.csv("Master_Table.csv")
#normalize fully vacc by population
mtable$nfullyvacc <- mtable$fullyvacc/mtable$population
#multiply incidence and mortality by 100,000
mtable$diff_incidence <- mtable$diff_incidence*100000
mtable$diff_mortality <- mtable$diff_mortality*100000
#make binary variable for rural codes
mtable$Rural <-  ifelse(mtable$RUC_Code==1, 2,ifelse(mtable$RUC_Code==2, 2,
ifelse(mtable$RUC_Code==3, 1,
ifelse(mtable$RUC_Code==4, 1,
ifelse(mtable$RUC_Code==5, 1,
ifelse(mtable$RUC_Code==6, 1,
ifelse(mtable$RUC_Code==7, 1,0)))))))
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#Rural as categorical variable
mtable$Rural <- as.factor(mtable$Rural)
#model for vaccines
fitv <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
#make binary variable for rural codes
mtable$Rural <-  ifelse(mtable$RUC_Code==1, 2,ifelse(mtable$RUC_Code==2, 2,
ifelse(mtable$RUC_Code==3, 1,
ifelse(mtable$RUC_Code==4, 1,
ifelse(mtable$RUC_Code==5, 1,
ifelse(mtable$RUC_Code==6, 1,
ifelse(mtable$RUC_Code==7, 1,0)))))))
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#Rural as categorical variable
mtable$Rural <- as.factor(mtable$Rural)
#model for vaccines
fitv <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
summary(fitv)
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#model for vaccines with confounders
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
fit<- lm(mtable$diff_ntest ~ mtable$Rural)
summary(fit)
fit<- lm(mtable$diff_ntest ~ as.factor(mtable$Rural)
boxplot(mtable$diff_ntest    ~ mtable$diff_test)
boxplot(mtable$diff_ntest    ~ mtable$diff_test)
boxplot(mtable$diff_ntest    ~ mtable$diff_test)
boxplot(mtable$Rural    ~ mtable$diff_test)
boxplot(mtable$Rural    ~ mtable$diff_test)
boxplot(mtable$Rural    ~ mtable$diff_test)
boxplot(mtable$diff_ntest ~ mtable$Rural)
# load libraries
library(tidyverse)
library(ggplot2)
#Load master table
mtable <- read.csv("Master_Table.csv")
#normalize fully vacc by population
mtable$nfullyvacc <- mtable$fullyvacc/mtable$population
#multiply incidence and mortality by 100,000
mtable$diff_incidence <- mtable$diff_incidence*100000
mtable$diff_mortality <- mtable$diff_mortality*100000
#make binary variable for rural codes
mtable$Rural <-  ifelse(mtable$RUC_Code==1, 2,ifelse(mtable$RUC_Code==2, 2,
ifelse(mtable$RUC_Code==3, 1,
ifelse(mtable$RUC_Code==4, 1,
ifelse(mtable$RUC_Code==5, 1,
ifelse(mtable$RUC_Code==6, 1,
ifelse(mtable$RUC_Code==7, 1,0)))))))
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#Rural as categorical variable
mtable$Rural <- as.factor(mtable$Rural)
#model for vaccines
fitv <- lm(mtable$diff_incidence ~ mtable$nfullyvacc)
summary(fitv)
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#model for vaccines with confounders
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
fitv$coefficients
mtable %>% ggplot() +
aes(x = nfullyvacc, y=diff_incidence) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fitv$coefficients[1], slope = fitv$coefficients[2],
color = "lightblue"), size = 1) +
geom_abline(aes(intercept = fitvc$coefficients[1], slope = fitvc$coefficients[2],
color = "blue"), size = 1) +
xlab  ("% Fully vaccinated population") +
ylab ( "Incidence of COVID-19 per 100,000" )+
scale_color_identity(guide = "legend", labels = c("Adjusted", "Non-adjusted")) +
theme_bw() + theme(text = element_text(size = 19),
legend.position = "right") + guides(color = guide_legend("Model"))
#F test for pop density
drop1(fitvc, test = "F")
#### Eta squared, partial eta squared
# install.packages(lsr)
library(lsr)
etaSquared(fitvc, anova=TRUE)
#model for vaccines
fitv <- lm(mtable$diff_mortality ~ mtable$nfullyvacc)
summary(fitv)
#remove Imperial outlier
mtable %>% filter(area != "Imperial") -> mtable
#model for vaccines with confounders
fitvc <- lm(mtable$diff_mortality ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
fitv$coefficients
mtable %>% ggplot() +
aes(x = nfullyvacc, y=diff_mortality) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fitv$coefficients[1], slope = fitv$coefficients[2],
color = "lightblue"), size = 1) +
geom_abline(aes(intercept = fitvc$coefficients[1], slope = fitvc$coefficients[2],
color = "blue"), size = 1) +
xlab  ("% Fully vaccinated population") +
ylab ( "Mortality of COVID-19 per 100,000" )+
scale_color_identity(guide = "legend", labels = c("Adjusted", "Non-adjusted")) +
theme_bw() + theme(text = element_text(size = 19),
legend.position = "right") + guides(color = guide_legend("Model"))
#F test for pop density
drop1(fitvc, test = "F")
#### Eta squared, partial eta squared
# install.packages(lsr)
library(lsr)
etaSquared(fitvc, anova=TRUE)
plot(mtable$poverty_all , mtable$nfullyvacc)
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
#vaccine vs college
fite <- lm(mtable$nfullyvacc ~ mtable$hi_edu)
summary(fite)
fite$coefficients
mtable %>% ggplot() +
aes(y = nfullyvacc, x=hi_edu) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fite$coefficients[1], slope = fite$coefficients[2],
color = "lightblue"), size = 1) +
ylab  ("% Fully vaccinated population") +
xlab ( "% Population with college completed" )+
theme_bw() + theme(text = element_text(size = 30),
legend.position = "none") #+ guides(color = guide_legend("Model"))
#vaccine vs poverty
fite <- lm(mtable$nfullyvacc ~ mtable$poverty_all)
summary(fite)
fite$coefficients
mtable %>% ggplot() +
aes(y = nfullyvacc, x=poverty_all) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fite$coefficients[1], slope = fite$coefficients[2],
color = "lightblue"), size = 1) +
ylab  ("% Fully vaccinated population") +
xlab ( "% Poverty" )+
theme_bw() + theme(text = element_text(size = 30),
legend.position = "none") #+ guides(color = guide_legend("Model"))
mtable %>% ggplot() +
aes(y = nfullyvacc, x=poverty_all) +
geom_point(col= "blue", size = 2) +
geom_abline(aes(intercept = fite$coefficients[1], slope = fite$coefficients[2],
color = "lightblue"), size = 1) +
ylab  ("% Fully vaccinated population") +
xlab ( "% Poverty" )+
theme_bw() + theme(text = element_text(size = 30),
legend.position = "none") #+ guides(color = guide_legend("Model"))
#Boxplot for vaccine vs Pop density
mtable %>% ggplot() +
aes(x = Rural, y = nfullyvacc, fill = Rural) +
geom_boxplot() +
ylab("% Vaccinated people") + xlab("Population density") +
theme_bw() + theme(text = element_text(size = 30), legend.position = "none")
#model for vaccines with confounders relevel
mtable$Rural <- relevel(mtable$Rural, ref="1")
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
#model for vaccines with confounders relevel
mtable$Rural <- relevel(mtable$Rural, ref="1")
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
#model for vaccines with confounders relevel
mtable$Rural <- relevel(mtable$Rural, ref="2")
fitvc <- lm(mtable$diff_incidence ~ mtable$nfullyvacc +
mtable$unemployment_2020 +
mtable$perc_income +
mtable$poverty_all +
mtable$poverty_17 +
mtable$hi_edu +
mtable$Rural +
mtable$diff_ntest)
summary(fitvc)
#Load library
library(tidyverse)
###Load tables with demographic variables
hhold <- read.csv("UnemploymentReport_ge.csv",
sep = ";",
skip = 2, #remove first 2 rows
header = TRUE, check.names = FALSE)
unem <- read.csv("Unemployment2021.csv", sep = ";")#unemployment 2021
poverty <- read.csv("PovertyReport.csv", sep = ";")
#rural <- read.csv("ruralurbancodes.csv", sep = ";") #not necessary
education <- read.csv("EducationReport.csv", sep = ";", check.names = FALSE)
vaccine <- read.csv("https://data.chhs.ca.gov/dataset/e283ee5a-cf18-4f20-a92c-ee94a2866ccd/resource/130d7ba2-b6eb-438d-a412-741bde207e1c/download/covid19vaccinesbycounty.csv")
## pre-processing
#hhold
hhold$area <- hhold$Name %>%
gsub(pattern = " County, CA", replacement = "") %>%
gsub(pattern = " County/city, CA", replacement = "")
gsub("%", "",
hhold$`% of State Median HH Income`) %>% as.numeric() -> hhold$perc_income
gsub("\\$", "",
hhold$`Median Household Income (2019)`) %>%
gsub("\\,", "", .) %>% as.numeric() -> hhold$hhold_income
#unem
gsub("%",'' ,unem$RATE) %>% as.numeric() -> unem$RATE
colnames(unem)[1] <- "area"
unem <- unem[,c("area", "RATE")]
#poverty
poverty$Name %in% hhold$area
#education
education$Name %>%
gsub(pattern = ", CA        ", replacement = "") -> education$area #%in% hhold$area
education$`2015-2019` %>% gsub(pattern = "%", "", .) %>% as.numeric() -> education$`2015-2019`
#vaccine
vaccine$county %>% table %>% names
TheMasterTable <- merge(hhold, poverty,
by.x = "area", by.y = "Name")
TheMasterTable <- merge(TheMasterTable, unem,
by = "area")
TheMasterTable <- merge(TheMasterTable, education,
by= "area")
TheMasterTable<-  TheMasterTable[,c("area",
"FIPS",
"RATE",
"perc_income",
"hhold_income",
"RUC_Code",
"Percent_all",
"Percent_17",
"2015-2019")]
colnames(TheMasterTable)[3] <- "unemployment_2020"
colnames(TheMasterTable)[7] <- "poverty_all"
colnames(TheMasterTable)[8] <- "poverty_17"
colnames(TheMasterTable)[9] <- "hi_edu"
## write file
write.csv(TheMasterTable, "Variables.csv", row.names = FALSE)
View(TheMasterTable)
# load libraries
library(tidyverse)
library(ggplot2)
#Load tables for covid outcome per county in CA
vaccine <- read.csv("https://data.chhs.ca.gov/dataset/e283ee5a-cf18-4f20-a92c-ee94a2866ccd/resource/130d7ba2-b6eb-438d-a412-741bde207e1c/download/covid19vaccinesbycounty.csv")
## Only max date
dates <- vaccine$administered_date %>% table %>% names() ## all dates
last_day = max(dates)
vaccine %>% filter(administered_date == last_day) -> last_vaccine
# Make Dataframe for vaccine
frame_vacc <- data.frame(
area = last_vaccine$county,
fullyvacc = last_vaccine$cumulative_fully_vaccinated
)
View(frame_vacc)
